// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bind

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// AcctManagerMetaData contains all meta data concerning the AcctManager contract.
var AcctManagerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_orgAdmin\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_status\",\"type\":\"uint256\"}],\"name\":\"AccountAccessModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_orgAdmin\",\"type\":\"bool\"}],\"name\":\"AccountAccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_status\",\"type\":\"uint256\"}],\"name\":\"AccountStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addNewAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"voterUpdate\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_adminRole\",\"type\":\"bool\"}],\"name\":\"assignAccountRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_status\",\"type\":\"uint256\"}],\"name\":\"assignAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ultParent\",\"type\":\"string\"}],\"name\":\"checkOrgAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_aIndex\",\"type\":\"uint256\"}],\"name\":\"getAccountDetailsFromIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountOrgRole\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountRole\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_permUpgradable\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"orgAdminExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"removeExistingAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"voterUpdate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nwAdminRole\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_oAdminRole\",\"type\":\"string\"}],\"name\":\"setDefaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_action\",\"type\":\"uint256\"}],\"name\":\"updateAccountStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"validateAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x6080604052348015600e575f80fd5b5061423b8061001c5f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063950145cf11610095578063cef7f6af11610064578063cef7f6af146102fe578063e3483a9d1461031a578063e8b42bf414610336578063fd4fa05a14610366576100fe565b8063950145cf1461024e578063b20185681461027e578063c214e5e5146102b2578063c4d66de8146102e2576100fe565b80636acee5fd116100d15780636acee5fd146101a15780636b568d76146101d257806381d66b231461020257806384b7a84a14610232576100fe565b8063143a5604146101025780631d09dc931461011e5780632aceb5341461014f578063309e36ef14610183575b5f80fd5b61011c60048036038101906101179190612cb4565b610396565b005b61013860048036038101906101339190612d57565b610637565b604051610146929190612dc0565b60405180910390f35b61016960048036038101906101649190612de7565b610a2c565b60405161017a959493929190612e9a565b60405180910390f35b61018b610ce2565b6040516101989190612ef9565b60405180910390f35b6101bb60048036038101906101b69190612de7565b610cee565b6040516101c9929190612f12565b60405180910390f35b6101ec60048036038101906101e79190612f47565b610ef4565b6040516101f99190612fa4565b60405180910390f35b61021c60048036038101906102179190612de7565b610fcc565b6040516102299190612fbd565b60405180910390f35b61024c60048036038101906102479190613007565b611176565b005b610268600480360381019061026391906131a0565b6117cd565b6040516102759190612fa4565b60405180910390f35b610298600480360381019061029391906131e7565b6118ce565b6040516102a9959493929190612e9a565b60405180910390f35b6102cc60048036038101906102c79190613212565b611ad7565b6040516102d99190612fa4565b60405180910390f35b6102fc60048036038101906102f79190612de7565b611e85565b005b6103186004803603810190610313919061326f565b6120aa565b005b610334600480360381019061032f91906132ed565b6121cd565b005b610350600480360381019061034b9190613390565b61244c565b60405161035d9190612fa4565b60405180910390f35b610380600480360381019061037b9190612de7565b6126c1565b60405161038d9190612ef9565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103fe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610422919061342c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610486906134a1565b60405180910390fd5b60046040516020016104a191906135af565b6040516020818303038152906040528051906020012083836040516020016104ca9291906135fb565b604051602081830303815290604052805190602001201415801561055c575060056040516020016104fb91906135af565b6040516020818303038152906040528051906020012083836040516020016105249291906135fb565b604051602081830303815290604052604051602001610543919061366f565b6040516020818303038152906040528051906020012014155b61059b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610592906136ff565b60405180910390fd5b61062f8686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050600285612747565b505050505050565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c5919061342c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610732576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610729906134a1565b60405180910390fd5b61077e84848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050506117cd565b15610a1e575f6107e560065f878760405160200161079d9291906135fb565b6040516020818303038152906040528051906020012081526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612acd565b90506006600182815481106107fd576107fc61371d565b5b905f5260205f209060050201600301819055505f600182815481106108255761082461371d565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507f68e62a03aeb0a125c2fc869eed72f2fca473680987bdd680c093a534e17cc7766001828154811061087f5761087e61371d565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600183815481106108c1576108c061371d565b5b905f5260205f209060050201600101600184815481106108e4576108e361371d565b5b905f5260205f209060050201600201600185815481106109075761090661371d565b5b905f5260205f2090600502016004015f9054906101000a900460ff16600186815481106109375761093661371d565b5b905f5260205f2090600502016003015460405161095895949392919061374a565b60405180910390a1600460405160200161097291906135af565b604051602081830303815290604052805190602001206001828154811061099c5761099b61371d565b5b905f5260205f2090600502016002016040516020016109bb91906135af565b6040516020818303038152906040528051906020012014600182815481106109e6576109e561371d565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250925050610a25565b5f80915091505b9250929050565b5f6060805f805f60025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610ad157855f806040518060400160405280600481526020017f4e4f4e4500000000000000000000000000000000000000000000000000000000815250919060405180602001604052805f815250919094509450945094509450610cd9565b5f610adb87612acd565b905060018181548110610af157610af061371d565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018281548110610b3357610b3261371d565b5b905f5260205f20906005020160010160018381548110610b5657610b5561371d565b5b905f5260205f20906005020160020160018481548110610b7957610b7861371d565b5b905f5260205f2090600502016003015460018581548110610b9d57610b9c61371d565b5b905f5260205f2090600502016004015f9054906101000a900460ff16838054610bc5906134ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf1906134ec565b8015610c3c5780601f10610c1357610100808354040283529160200191610c3c565b820191905f5260205f20905b815481529060010190602001808311610c1f57829003601f168201915b50505050509350828054610c4f906134ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7b906134ec565b8015610cc65780601f10610c9d57610100808354040283529160200191610cc6565b820191905f5260205f20905b815481529060010190602001808311610ca957829003601f168201915b5050505050925095509550955095509550505b91939590929450565b5f600180549050905090565b6060805f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610d83576040518060400160405280600481526020017f4e4f4e450000000000000000000000000000000000000000000000000000000081525060405180602001604052805f81525091509150610eef565b5f610d8d84612acd565b905060018181548110610da357610da261371d565b5b905f5260205f20906005020160010160018281548110610dc657610dc561371d565b5b905f5260205f209060050201600201818054610de1906134ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0d906134ec565b8015610e585780601f10610e2f57610100808354040283529160200191610e58565b820191905f5260205f20905b815481529060010190602001808311610e3b57829003601f168201915b50505050509150808054610e6b906134ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610e97906134ec565b8015610ee25780601f10610eb957610100808354040283529160200191610ee2565b820191905f5260205f20905b815481529060010190602001808311610ec557829003601f168201915b5050505050905092509250505b915091565b5f8060025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610f425760019050610fc5565b5f610f4c85612acd565b90508383604051602001610f619291906135fb565b6040516020818303038152906040528051906020012060018281548110610f8b57610f8a61371d565b5b905f5260205f209060050201600101604051602001610faa91906135af565b60405160208183030381529060405280519060200120149150505b9392505050565b60605f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20540361104f576040518060400160405280600481526020017f4e4f4e45000000000000000000000000000000000000000000000000000000008152509050611171565b5f61105983612acd565b90505f600182815481106110705761106f61371d565b5b905f5260205f209060050201600301541461113757600181815481106110995761109861371d565b5b905f5260205f20906005020160020180546110b3906134ec565b80601f01602080910402602001604051908101604052809291908181526020018280546110df906134ec565b801561112a5780601f106111015761010080835404028352916020019161112a565b820191905f5260205f20905b81548152906001019060200180831161110d57829003601f168201915b5050505050915050611171565b6040518060400160405280600481526020017f4e4f4e45000000000000000000000000000000000000000000000000000000008152509150505b919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111de573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611202919061342c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611266906134a1565b60405180910390fd5b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050825f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403611333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132a906137f3565b60405180910390fd5b816040516020016113449190612fbd565b60405160208183030381529060405280519060200120600161136583612acd565b815481106113765761137561371d565b5b905f5260205f20906005020160010160405160200161139591906135af565b60405160208183030381529060405280519060200120146113eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e29061385b565b60405180910390fd5b5f831180156113fa5750600683105b611439576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611430906138c3565b60405180910390fd5b600115156114998588888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505060405180602001604052805f81525061244c565b1515036114db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d290613951565b60405180910390fd5b5f6001840361155b57600260016114f187612acd565b815481106115025761150161371d565b5b905f5260205f2090600502016003015414611552576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611549906139df565b60405180910390fd5b60049050611757565b600284036115da576004600161157087612acd565b815481106115815761158061371d565b5b905f5260205f20906005020160030154146115d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c890613a6d565b60405180910390fd5b60029050611756565b6003840361165957600560016115ef87612acd565b81548110611600576115ff61371d565b5b905f5260205f2090600502016003015403611650576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164790613afb565b60405180910390fd5b60059050611755565b600484036116d8576005600161166e87612acd565b8154811061167f5761167e61371d565b5b905f5260205f20906005020160030154146116cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116c690613b89565b60405180910390fd5b60079050611754565b6005840361175357600760016116ed87612acd565b815481106116fe576116fd61371d565b5b905f5260205f209060050201600301541461174e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174590613c17565b60405180910390fd5b600290505b5b5b5b5b80600161176387612acd565b815481106117745761177361371d565b5b905f5260205f209060050201600301819055507f36b0ea38154dec5e98b6bf928b971a9db5e8cd4b6946350e9e43fb9848c70b25858888846040516117bc9493929190613c35565b60405180910390a150505050505050565b5f8073ffffffffffffffffffffffffffffffffffffffff1660065f846040516020016117f99190612fbd565b6040516020818303038152906040528051906020012081526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118c5575f60065f8460405160200161186c9190612fbd565b6040516020818303038152906040528051906020012081526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060026118bc826126c1565b149150506118c9565b5f90505b919050565b5f6060805f80600186815481106118e8576118e761371d565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001878154811061192a5761192961371d565b5b905f5260205f2090600502016001016001888154811061194d5761194c61371d565b5b905f5260205f209060050201600201600189815481106119705761196f61371d565b5b905f5260205f2090600502016003015460018a815481106119945761199361371d565b5b905f5260205f2090600502016004015f9054906101000a900460ff168380546119bc906134ec565b80601f01602080910402602001604051908101604052809291908181526020018280546119e8906134ec565b8015611a335780601f10611a0a57610100808354040283529160200191611a33565b820191905f5260205f20905b815481529060010190602001808311611a1657829003601f168201915b50505050509350828054611a46906134ec565b80601f0160208091040260200160405190810160405280929190818152602001828054611a72906134ec565b8015611abd5780601f10611a9457610100808354040283529160200191611abd565b820191905f5260205f20905b815481529060010190602001808311611aa057829003601f168201915b505050505092509450945094509450945091939590929450565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b65919061342c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc9906134a1565b60405180910390fd5b5f611bdc83610fcc565b90505f611be8846126c1565b90505f611bf485612acd565b90506005604051602001611c0891906135af565b6040516020818303038152906040528051906020012083604051602001611c2f9190612fbd565b60405160208183030381529060405280519060200120148015611c525750600182145b15611ccf578460065f8989604051602001611c6e9291906135fb565b6040516020818303038152906040528051906020012081526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600260018281548110611ce557611ce461371d565b5b905f5260205f209060050201600301819055506001808281548110611d0d57611d0c61371d565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507f68e62a03aeb0a125c2fc869eed72f2fca473680987bdd680c093a534e17cc7768560018381548110611d6857611d6761371d565b5b905f5260205f20906005020160010160018481548110611d8b57611d8a61371d565b5b905f5260205f20906005020160020160018581548110611dae57611dad61371d565b5b905f5260205f2090600502016004015f9054906101000a900460ff1660018681548110611dde57611ddd61371d565b5b905f5260205f20906005020160030154604051611dff95949392919061374a565b60405180910390a16004604051602001611e1991906135af565b6040516020818303038152906040528051906020012060018281548110611e4357611e4261371d565b5b905f5260205f209060050201600201604051602001611e6291906135af565b604051602081830303815290604052805190602001201493505050509392505050565b5f611e8e612b8c565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015611ed65750825b90505f60018367ffffffffffffffff16148015611f0957505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611f17575080155b15611f4e576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315611f9b576001855f0160086101000a81548160ff0219169083151502179055505b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603612009576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161200090613cbd565b60405180910390fd5b855f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156120a2575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516120999190613d30565b60405180910390a15b505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa158015612112573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612136919061342c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146121a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219a906134a1565b60405180910390fd5b8383600491826121b4929190613ed5565b508181600591826121c6929190613ed5565b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa158015612235573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612259919061342c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146122c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122bd906134a1565b60405180910390fd5b60056040516020016122d891906135af565b6040516020818303038152906040528051906020012083836040516020016123019291906135fb565b6040516020818303038152906040528051906020012014806123715750600460405160200161233091906135af565b6040516020818303038152906040528051906020012083836040516020016123599291906135fb565b60405160208183030381529060405280519060200120145b6123b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123a790614012565b60405180910390fd5b6124448686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050846001612747565b505050505050565b5f600460405160200161245f91906135af565b6040516020818303038152906040528051906020012061247e85610fcc565b60405160200161248e9190612fbd565b60405160208183030381529060405280519060200120036125a6575f6124b385612acd565b9050836040516020016124c69190612fbd565b60405160208183030381529060405280519060200120600182815481106124f0576124ef61371d565b5b905f5260205f20906005020160010160405160200161250f91906135af565b60405160208183030381529060405280519060200120148061259e57508260405160200161253d9190612fbd565b60405160208183030381529060405280519060200120600182815481106125675761256661371d565b5b905f5260205f20906005020160010160405160200161258691906135af565b60405160208183030381529060405280519060200120145b9150506126ba565b8373ffffffffffffffffffffffffffffffffffffffff1660065f856040516020016125d19190612fbd565b6040516020818303038152906040528051906020012081526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806126b757508373ffffffffffffffffffffffffffffffffffffffff1660065f8460405160200161265c9190612fbd565b6040516020818303038152906040528051906020012081526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b90505b9392505050565b5f8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20540361270e575f9050612742565b5f61271883612acd565b90506001818154811061272e5761272d61371d565b5b905f5260205f209060050201600301549150505b919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127d3919061342c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612840576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612837906134a1565b60405180910390fd5b5f61284a86612acd565b90505f60025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146129285783600182815481106128a5576128a461371d565b5b905f5260205f20906005020160020190816128c09190614030565b5082600182815481106128d6576128d561371d565b5b905f5260205f2090600502016003018190555081600182815481106128fe576128fd61371d565b5b905f5260205f2090600502016004015f6101000a81548160ff021916908315150217905550612a86565b60035f81548092919061293a9061412c565b919050555060035460025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060016040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001858152602001841515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081612a439190614030565b506040820151816002019081612a599190614030565b50606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555050505b7f68e62a03aeb0a125c2fc869eed72f2fca473680987bdd680c093a534e17cc7768686868587604051612abd959493929190614173565b60405180910390a1505050505050565b5f8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403612b3a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050612b87565b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b8491906141d2565b90505b919050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612bed82612bc4565b9050919050565b612bfd81612be3565b8114612c07575f80fd5b50565b5f81359050612c1881612bf4565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112612c3f57612c3e612c1e565b5b8235905067ffffffffffffffff811115612c5c57612c5b612c22565b5b602083019150836001820283011115612c7857612c77612c26565b5b9250929050565b5f8115159050919050565b612c9381612c7f565b8114612c9d575f80fd5b50565b5f81359050612cae81612c8a565b92915050565b5f805f805f8060808789031215612cce57612ccd612bbc565b5b5f612cdb89828a01612c0a565b965050602087013567ffffffffffffffff811115612cfc57612cfb612bc0565b5b612d0889828a01612c2a565b9550955050604087013567ffffffffffffffff811115612d2b57612d2a612bc0565b5b612d3789828a01612c2a565b93509350506060612d4a89828a01612ca0565b9150509295509295509295565b5f8060208385031215612d6d57612d6c612bbc565b5b5f83013567ffffffffffffffff811115612d8a57612d89612bc0565b5b612d9685828601612c2a565b92509250509250929050565b612dab81612c7f565b82525050565b612dba81612be3565b82525050565b5f604082019050612dd35f830185612da2565b612de06020830184612db1565b9392505050565b5f60208284031215612dfc57612dfb612bbc565b5b5f612e0984828501612c0a565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612e5482612e12565b612e5e8185612e1c565b9350612e6e818560208601612e2c565b612e7781612e3a565b840191505092915050565b5f819050919050565b612e9481612e82565b82525050565b5f60a082019050612ead5f830188612db1565b8181036020830152612ebf8187612e4a565b90508181036040830152612ed38186612e4a565b9050612ee26060830185612e8b565b612eef6080830184612da2565b9695505050505050565b5f602082019050612f0c5f830184612e8b565b92915050565b5f6040820190508181035f830152612f2a8185612e4a565b90508181036020830152612f3e8184612e4a565b90509392505050565b5f805f60408486031215612f5e57612f5d612bbc565b5b5f612f6b86828701612c0a565b935050602084013567ffffffffffffffff811115612f8c57612f8b612bc0565b5b612f9886828701612c2a565b92509250509250925092565b5f602082019050612fb75f830184612da2565b92915050565b5f6020820190508181035f830152612fd58184612e4a565b905092915050565b612fe681612e82565b8114612ff0575f80fd5b50565b5f8135905061300181612fdd565b92915050565b5f805f806060858703121561301f5761301e612bbc565b5b5f85013567ffffffffffffffff81111561303c5761303b612bc0565b5b61304887828801612c2a565b9450945050602061305b87828801612c0a565b925050604061306c87828801612ff3565b91505092959194509250565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6130b282612e3a565b810181811067ffffffffffffffff821117156130d1576130d061307c565b5b80604052505050565b5f6130e3612bb3565b90506130ef82826130a9565b919050565b5f67ffffffffffffffff82111561310e5761310d61307c565b5b61311782612e3a565b9050602081019050919050565b828183375f83830152505050565b5f61314461313f846130f4565b6130da565b9050828152602081018484840111156131605761315f613078565b5b61316b848285613124565b509392505050565b5f82601f83011261318757613186612c1e565b5b8135613197848260208601613132565b91505092915050565b5f602082840312156131b5576131b4612bbc565b5b5f82013567ffffffffffffffff8111156131d2576131d1612bc0565b5b6131de84828501613173565b91505092915050565b5f602082840312156131fc576131fb612bbc565b5b5f61320984828501612ff3565b91505092915050565b5f805f6040848603121561322957613228612bbc565b5b5f84013567ffffffffffffffff81111561324657613245612bc0565b5b61325286828701612c2a565b9350935050602061326586828701612c0a565b9150509250925092565b5f805f806040858703121561328757613286612bbc565b5b5f85013567ffffffffffffffff8111156132a4576132a3612bc0565b5b6132b087828801612c2a565b9450945050602085013567ffffffffffffffff8111156132d3576132d2612bc0565b5b6132df87828801612c2a565b925092505092959194509250565b5f805f805f806080878903121561330757613306612bbc565b5b5f61331489828a01612c0a565b965050602087013567ffffffffffffffff81111561333557613334612bc0565b5b61334189828a01612c2a565b9550955050604087013567ffffffffffffffff81111561336457613363612bc0565b5b61337089828a01612c2a565b9350935050606061338389828a01612ff3565b9150509295509295509295565b5f805f606084860312156133a7576133a6612bbc565b5b5f6133b486828701612c0a565b935050602084013567ffffffffffffffff8111156133d5576133d4612bc0565b5b6133e186828701613173565b925050604084013567ffffffffffffffff81111561340257613401612bc0565b5b61340e86828701613173565b9150509250925092565b5f8151905061342681612bf4565b92915050565b5f6020828403121561344157613440612bbc565b5b5f61344e84828501613418565b91505092915050565b7f696e76616c69642063616c6c65720000000000000000000000000000000000005f82015250565b5f61348b600e83612e1c565b915061349682613457565b602082019050919050565b5f6020820190508181035f8301526134b88161347f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061350357607f821691505b602082108103613516576135156134bf565b5b50919050565b5f819050815f5260205f209050919050565b5f815461353a816134ec565b6135448186612e1c565b9450600182165f811461355e5760018114613574576135a6565b60ff1983168652811515602002860193506135a6565b61357d8561351c565b5f5b8381101561359e5781548189015260018201915060208101905061357f565b808801955050505b50505092915050565b5f6020820190508181035f8301526135c7818461352e565b905092915050565b5f6135da8385612e1c565b93506135e7838584613124565b6135f083612e3a565b840190509392505050565b5f6020820190508181035f8301526136148184866135cf565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6136418261361d565b61364b8185613627565b935061365b818560208601612e2c565b61366481612e3a565b840191505092915050565b5f6020820190508181035f8301526136878184613637565b905092915050565b7f63616e6e6f742062652063616c6c65642066726f2061737369676e696e67206f5f8201527f72672061646d696e20616e64206e6574776f726b2061646d696e20726f6c6573602082015250565b5f6136e9604083612e1c565b91506136f48261368f565b604082019050919050565b5f6020820190508181035f830152613716816136dd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60a08201905061375d5f830188612db1565b818103602083015261376f818761352e565b90508181036040830152613783818661352e565b90506137926060830185612da2565b61379f6080830184612e8b565b9695505050505050565b7f6163636f756e7420646f6573206e6f74206578697374730000000000000000005f82015250565b5f6137dd601783612e1c565b91506137e8826137a9565b602082019050919050565b5f6020820190508181035f83015261380a816137d1565b9050919050565b7f6163636f756e7420696e20646966666572656e74206f726700000000000000005f82015250565b5f613845601883612e1c565b915061385082613811565b602082019050919050565b5f6020820190508181035f83015261387281613839565b9050919050565b7f696e76616c696420737461747573206368616e676520726571756573740000005f82015250565b5f6138ad601d83612e1c565b91506138b882613879565b602082019050919050565b5f6020820190508181035f8301526138da816138a1565b9050919050565b7f737461747573206368616e6765206e6f7420706f737369626c6520666f72206f5f8201527f72672061646d696e206163636f756e7473000000000000000000000000000000602082015250565b5f61393b603183612e1c565b9150613946826138e1565b604082019050919050565b5f6020820190508181035f8301526139688161392f565b9050919050565b7f6163636f756e74206973206e6f7420696e20616374697665207374617475732e5f8201527f206f7065726174696f6e2063616e6e6f7420626520646f6e6500000000000000602082015250565b5f6139c9603983612e1c565b91506139d48261396f565b604082019050919050565b5f6020820190508181035f8301526139f6816139bd565b9050919050565b7f6163636f756e74206973206e6f7420696e2073757370656e64656420737461745f8201527f75732e206f7065726174696f6e2063616e6e6f7420626520646f6e6500000000602082015250565b5f613a57603c83612e1c565b9150613a62826139fd565b604082019050919050565b5f6020820190508181035f830152613a8481613a4b565b9050919050565b7f6163636f756e7420697320616c726561647920626c61636b6c69737465642e205f8201527f6f7065726174696f6e2063616e6e6f7420626520646f6e650000000000000000602082015250565b5f613ae5603883612e1c565b9150613af082613a8b565b604082019050919050565b5f6020820190508181035f830152613b1281613ad9565b9050919050565b7f6163636f756e74206973206e6f7420626c61636b6c69737465642e206f7065725f8201527f6174696f6e2063616e6e6f7420626520646f6e65000000000000000000000000602082015250565b5f613b73603483612e1c565b9150613b7e82613b19565b604082019050919050565b5f6020820190508181035f830152613ba081613b67565b9050919050565b7f6163636f756e74207265636f76657279206e6f7420696e697469617465642e205f8201527f6f7065726174696f6e2063616e6e6f7420626520646f6e650000000000000000602082015250565b5f613c01603883612e1c565b9150613c0c82613ba7565b604082019050919050565b5f6020820190508181035f830152613c2e81613bf5565b9050919050565b5f606082019050613c485f830187612db1565b8181036020830152613c5b8185876135cf565b9050613c6a6040830184612e8b565b95945050505050565b7f43616e6e6f742073657420746f20656d707479206164647265737300000000005f82015250565b5f613ca7601b83612e1c565b9150613cb282613c73565b602082019050919050565b5f6020820190508181035f830152613cd481613c9b565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f613d1a613d15613d1084613cdb565b613cf7565b613ce4565b9050919050565b613d2a81613d00565b82525050565b5f602082019050613d435f830184613d21565b92915050565b5f82905092915050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302613d9d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613d62565b613da78683613d62565b95508019841693508086168417925050509392505050565b5f613dd9613dd4613dcf84612e82565b613cf7565b612e82565b9050919050565b5f819050919050565b613df283613dbf565b613e06613dfe82613de0565b848454613d6e565b825550505050565b5f90565b613e1a613e0e565b613e25818484613de9565b505050565b5b81811015613e4857613e3d5f82613e12565b600181019050613e2b565b5050565b601f821115613e8d57613e5e8161351c565b613e6784613d53565b81016020851015613e76578190505b613e8a613e8285613d53565b830182613e2a565b50505b505050565b5f82821c905092915050565b5f613ead5f1984600802613e92565b1980831691505092915050565b5f613ec58383613e9e565b9150826002028217905092915050565b613edf8383613d49565b67ffffffffffffffff811115613ef857613ef761307c565b5b613f0282546134ec565b613f0d828285613e4c565b5f601f831160018114613f3a575f8415613f28578287013590505b613f328582613eba565b865550613f99565b601f198416613f488661351c565b5f5b82811015613f6f57848901358255600182019150602085019450602081019050613f4a565b86831015613f8c5784890135613f88601f891682613e9e565b8355505b6001600288020188555050505b50505050505050565b7f63616e2062652063616c6c656420746f2061737369676e2061646d696e20726f5f8201527f6c6573206f6e6c79000000000000000000000000000000000000000000000000602082015250565b5f613ffc602883612e1c565b915061400782613fa2565b604082019050919050565b5f6020820190508181035f83015261402981613ff0565b9050919050565b61403982612e12565b67ffffffffffffffff8111156140525761405161307c565b5b61405c82546134ec565b614067828285613e4c565b5f60209050601f831160018114614098575f8415614086578287015190505b6140908582613eba565b8655506140f7565b601f1984166140a68661351c565b5f5b828110156140cd578489015182556001820191506020850194506020810190506140a8565b868310156140ea57848901516140e6601f891682613e9e565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61413682612e82565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614168576141676140ff565b5b600182019050919050565b5f60a0820190506141865f830188612db1565b81810360208301526141988187612e4a565b905081810360408301526141ac8186612e4a565b90506141bb6060830185612da2565b6141c86080830184612e8b565b9695505050505050565b5f6141dc82612e82565b91506141e783612e82565b92508282039050818111156141ff576141fe6140ff565b5b9291505056fea264697066735822122098223788786f0c4e2da0275ef2701dd65d8cd8a7ec2a26b16a511fd1b121e19664736f6c63430008190033",
}

// AcctManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use AcctManagerMetaData.ABI instead.
var AcctManagerABI = AcctManagerMetaData.ABI

var AcctManagerParsedABI, _ = abi.JSON(strings.NewReader(AcctManagerABI))

// AcctManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use AcctManagerMetaData.Bin instead.
var AcctManagerBin = AcctManagerMetaData.Bin

// DeployAcctManager deploys a new Ethereum contract, binding an instance of AcctManager to it.
func DeployAcctManager(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *AcctManager, error) {
	parsed, err := AcctManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(AcctManagerBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &AcctManager{AcctManagerCaller: AcctManagerCaller{contract: contract}, AcctManagerTransactor: AcctManagerTransactor{contract: contract}, AcctManagerFilterer: AcctManagerFilterer{contract: contract}}, nil
}

// AcctManager is an auto generated Go binding around an Ethereum contract.
type AcctManager struct {
	AcctManagerCaller     // Read-only binding to the contract
	AcctManagerTransactor // Write-only binding to the contract
	AcctManagerFilterer   // Log filterer for contract events
}

// AcctManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type AcctManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AcctManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AcctManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AcctManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AcctManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AcctManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AcctManagerSession struct {
	Contract     *AcctManager      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// AcctManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AcctManagerCallerSession struct {
	Contract *AcctManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// AcctManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AcctManagerTransactorSession struct {
	Contract     *AcctManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// AcctManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type AcctManagerRaw struct {
	Contract *AcctManager // Generic contract binding to access the raw methods on
}

// AcctManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AcctManagerCallerRaw struct {
	Contract *AcctManagerCaller // Generic read-only contract binding to access the raw methods on
}

// AcctManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AcctManagerTransactorRaw struct {
	Contract *AcctManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAcctManager creates a new instance of AcctManager, bound to a specific deployed contract.
func NewAcctManager(address common.Address, backend bind.ContractBackend) (*AcctManager, error) {
	contract, err := bindAcctManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &AcctManager{AcctManagerCaller: AcctManagerCaller{contract: contract}, AcctManagerTransactor: AcctManagerTransactor{contract: contract}, AcctManagerFilterer: AcctManagerFilterer{contract: contract}}, nil
}

// NewAcctManagerCaller creates a new read-only instance of AcctManager, bound to a specific deployed contract.
func NewAcctManagerCaller(address common.Address, caller bind.ContractCaller) (*AcctManagerCaller, error) {
	contract, err := bindAcctManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AcctManagerCaller{contract: contract}, nil
}

// NewAcctManagerTransactor creates a new write-only instance of AcctManager, bound to a specific deployed contract.
func NewAcctManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*AcctManagerTransactor, error) {
	contract, err := bindAcctManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AcctManagerTransactor{contract: contract}, nil
}

// NewAcctManagerFilterer creates a new log filterer instance of AcctManager, bound to a specific deployed contract.
func NewAcctManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*AcctManagerFilterer, error) {
	contract, err := bindAcctManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AcctManagerFilterer{contract: contract}, nil
}

// bindAcctManager binds a generic wrapper to an already deployed contract.
func bindAcctManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(AcctManagerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AcctManager *AcctManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AcctManager.Contract.AcctManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AcctManager *AcctManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AcctManager.Contract.AcctManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AcctManager *AcctManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AcctManager.Contract.AcctManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AcctManager *AcctManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AcctManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AcctManager *AcctManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AcctManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AcctManager *AcctManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AcctManager.Contract.contract.Transact(opts, method, params...)
}

// CheckOrgAdmin is a free data retrieval call binding the contract method 0xe8b42bf4.
//
// Solidity: function checkOrgAdmin(address _account, string _orgId, string _ultParent) view returns(bool)
func (_AcctManager *AcctManagerCaller) CheckOrgAdmin(opts *bind.CallOpts, _account common.Address, _orgId string, _ultParent string) (bool, error) {
	var out []interface{}
	err := _AcctManager.contract.Call(opts, &out, "checkOrgAdmin", _account, _orgId, _ultParent)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckOrgAdmin is a free data retrieval call binding the contract method 0xe8b42bf4.
//
// Solidity: function checkOrgAdmin(address _account, string _orgId, string _ultParent) view returns(bool)
func (_AcctManager *AcctManagerSession) CheckOrgAdmin(_account common.Address, _orgId string, _ultParent string) (bool, error) {
	return _AcctManager.Contract.CheckOrgAdmin(&_AcctManager.CallOpts, _account, _orgId, _ultParent)
}

// CheckOrgAdmin is a free data retrieval call binding the contract method 0xe8b42bf4.
//
// Solidity: function checkOrgAdmin(address _account, string _orgId, string _ultParent) view returns(bool)
func (_AcctManager *AcctManagerCallerSession) CheckOrgAdmin(_account common.Address, _orgId string, _ultParent string) (bool, error) {
	return _AcctManager.Contract.CheckOrgAdmin(&_AcctManager.CallOpts, _account, _orgId, _ultParent)
}

// GetAccountDetails is a free data retrieval call binding the contract method 0x2aceb534.
//
// Solidity: function getAccountDetails(address _account) view returns(address, string, string, uint256, bool)
func (_AcctManager *AcctManagerCaller) GetAccountDetails(opts *bind.CallOpts, _account common.Address) (common.Address, string, string, *big.Int, bool, error) {
	var out []interface{}
	err := _AcctManager.contract.Call(opts, &out, "getAccountDetails", _account)

	if err != nil {
		return *new(common.Address), *new(string), *new(string), *new(*big.Int), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	out1 := *abi.ConvertType(out[1], new(string)).(*string)
	out2 := *abi.ConvertType(out[2], new(string)).(*string)
	out3 := *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	out4 := *abi.ConvertType(out[4], new(bool)).(*bool)

	return out0, out1, out2, out3, out4, err

}

// GetAccountDetails is a free data retrieval call binding the contract method 0x2aceb534.
//
// Solidity: function getAccountDetails(address _account) view returns(address, string, string, uint256, bool)
func (_AcctManager *AcctManagerSession) GetAccountDetails(_account common.Address) (common.Address, string, string, *big.Int, bool, error) {
	return _AcctManager.Contract.GetAccountDetails(&_AcctManager.CallOpts, _account)
}

// GetAccountDetails is a free data retrieval call binding the contract method 0x2aceb534.
//
// Solidity: function getAccountDetails(address _account) view returns(address, string, string, uint256, bool)
func (_AcctManager *AcctManagerCallerSession) GetAccountDetails(_account common.Address) (common.Address, string, string, *big.Int, bool, error) {
	return _AcctManager.Contract.GetAccountDetails(&_AcctManager.CallOpts, _account)
}

// GetAccountDetailsFromIndex is a free data retrieval call binding the contract method 0xb2018568.
//
// Solidity: function getAccountDetailsFromIndex(uint256 _aIndex) view returns(address, string, string, uint256, bool)
func (_AcctManager *AcctManagerCaller) GetAccountDetailsFromIndex(opts *bind.CallOpts, _aIndex *big.Int) (common.Address, string, string, *big.Int, bool, error) {
	var out []interface{}
	err := _AcctManager.contract.Call(opts, &out, "getAccountDetailsFromIndex", _aIndex)

	if err != nil {
		return *new(common.Address), *new(string), *new(string), *new(*big.Int), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	out1 := *abi.ConvertType(out[1], new(string)).(*string)
	out2 := *abi.ConvertType(out[2], new(string)).(*string)
	out3 := *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	out4 := *abi.ConvertType(out[4], new(bool)).(*bool)

	return out0, out1, out2, out3, out4, err

}

// GetAccountDetailsFromIndex is a free data retrieval call binding the contract method 0xb2018568.
//
// Solidity: function getAccountDetailsFromIndex(uint256 _aIndex) view returns(address, string, string, uint256, bool)
func (_AcctManager *AcctManagerSession) GetAccountDetailsFromIndex(_aIndex *big.Int) (common.Address, string, string, *big.Int, bool, error) {
	return _AcctManager.Contract.GetAccountDetailsFromIndex(&_AcctManager.CallOpts, _aIndex)
}

// GetAccountDetailsFromIndex is a free data retrieval call binding the contract method 0xb2018568.
//
// Solidity: function getAccountDetailsFromIndex(uint256 _aIndex) view returns(address, string, string, uint256, bool)
func (_AcctManager *AcctManagerCallerSession) GetAccountDetailsFromIndex(_aIndex *big.Int) (common.Address, string, string, *big.Int, bool, error) {
	return _AcctManager.Contract.GetAccountDetailsFromIndex(&_AcctManager.CallOpts, _aIndex)
}

// GetAccountOrgRole is a free data retrieval call binding the contract method 0x6acee5fd.
//
// Solidity: function getAccountOrgRole(address _account) view returns(string, string)
func (_AcctManager *AcctManagerCaller) GetAccountOrgRole(opts *bind.CallOpts, _account common.Address) (string, string, error) {
	var out []interface{}
	err := _AcctManager.contract.Call(opts, &out, "getAccountOrgRole", _account)

	if err != nil {
		return *new(string), *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new(string)).(*string)

	return out0, out1, err

}

// GetAccountOrgRole is a free data retrieval call binding the contract method 0x6acee5fd.
//
// Solidity: function getAccountOrgRole(address _account) view returns(string, string)
func (_AcctManager *AcctManagerSession) GetAccountOrgRole(_account common.Address) (string, string, error) {
	return _AcctManager.Contract.GetAccountOrgRole(&_AcctManager.CallOpts, _account)
}

// GetAccountOrgRole is a free data retrieval call binding the contract method 0x6acee5fd.
//
// Solidity: function getAccountOrgRole(address _account) view returns(string, string)
func (_AcctManager *AcctManagerCallerSession) GetAccountOrgRole(_account common.Address) (string, string, error) {
	return _AcctManager.Contract.GetAccountOrgRole(&_AcctManager.CallOpts, _account)
}

// GetAccountRole is a free data retrieval call binding the contract method 0x81d66b23.
//
// Solidity: function getAccountRole(address _account) view returns(string)
func (_AcctManager *AcctManagerCaller) GetAccountRole(opts *bind.CallOpts, _account common.Address) (string, error) {
	var out []interface{}
	err := _AcctManager.contract.Call(opts, &out, "getAccountRole", _account)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetAccountRole is a free data retrieval call binding the contract method 0x81d66b23.
//
// Solidity: function getAccountRole(address _account) view returns(string)
func (_AcctManager *AcctManagerSession) GetAccountRole(_account common.Address) (string, error) {
	return _AcctManager.Contract.GetAccountRole(&_AcctManager.CallOpts, _account)
}

// GetAccountRole is a free data retrieval call binding the contract method 0x81d66b23.
//
// Solidity: function getAccountRole(address _account) view returns(string)
func (_AcctManager *AcctManagerCallerSession) GetAccountRole(_account common.Address) (string, error) {
	return _AcctManager.Contract.GetAccountRole(&_AcctManager.CallOpts, _account)
}

// GetAccountStatus is a free data retrieval call binding the contract method 0xfd4fa05a.
//
// Solidity: function getAccountStatus(address _account) view returns(uint256)
func (_AcctManager *AcctManagerCaller) GetAccountStatus(opts *bind.CallOpts, _account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _AcctManager.contract.Call(opts, &out, "getAccountStatus", _account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetAccountStatus is a free data retrieval call binding the contract method 0xfd4fa05a.
//
// Solidity: function getAccountStatus(address _account) view returns(uint256)
func (_AcctManager *AcctManagerSession) GetAccountStatus(_account common.Address) (*big.Int, error) {
	return _AcctManager.Contract.GetAccountStatus(&_AcctManager.CallOpts, _account)
}

// GetAccountStatus is a free data retrieval call binding the contract method 0xfd4fa05a.
//
// Solidity: function getAccountStatus(address _account) view returns(uint256)
func (_AcctManager *AcctManagerCallerSession) GetAccountStatus(_account common.Address) (*big.Int, error) {
	return _AcctManager.Contract.GetAccountStatus(&_AcctManager.CallOpts, _account)
}

// GetNumberOfAccounts is a free data retrieval call binding the contract method 0x309e36ef.
//
// Solidity: function getNumberOfAccounts() view returns(uint256)
func (_AcctManager *AcctManagerCaller) GetNumberOfAccounts(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AcctManager.contract.Call(opts, &out, "getNumberOfAccounts")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetNumberOfAccounts is a free data retrieval call binding the contract method 0x309e36ef.
//
// Solidity: function getNumberOfAccounts() view returns(uint256)
func (_AcctManager *AcctManagerSession) GetNumberOfAccounts() (*big.Int, error) {
	return _AcctManager.Contract.GetNumberOfAccounts(&_AcctManager.CallOpts)
}

// GetNumberOfAccounts is a free data retrieval call binding the contract method 0x309e36ef.
//
// Solidity: function getNumberOfAccounts() view returns(uint256)
func (_AcctManager *AcctManagerCallerSession) GetNumberOfAccounts() (*big.Int, error) {
	return _AcctManager.Contract.GetNumberOfAccounts(&_AcctManager.CallOpts)
}

// OrgAdminExists is a free data retrieval call binding the contract method 0x950145cf.
//
// Solidity: function orgAdminExists(string _orgId) view returns(bool)
func (_AcctManager *AcctManagerCaller) OrgAdminExists(opts *bind.CallOpts, _orgId string) (bool, error) {
	var out []interface{}
	err := _AcctManager.contract.Call(opts, &out, "orgAdminExists", _orgId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// OrgAdminExists is a free data retrieval call binding the contract method 0x950145cf.
//
// Solidity: function orgAdminExists(string _orgId) view returns(bool)
func (_AcctManager *AcctManagerSession) OrgAdminExists(_orgId string) (bool, error) {
	return _AcctManager.Contract.OrgAdminExists(&_AcctManager.CallOpts, _orgId)
}

// OrgAdminExists is a free data retrieval call binding the contract method 0x950145cf.
//
// Solidity: function orgAdminExists(string _orgId) view returns(bool)
func (_AcctManager *AcctManagerCallerSession) OrgAdminExists(_orgId string) (bool, error) {
	return _AcctManager.Contract.OrgAdminExists(&_AcctManager.CallOpts, _orgId)
}

// ValidateAccount is a free data retrieval call binding the contract method 0x6b568d76.
//
// Solidity: function validateAccount(address _account, string _orgId) view returns(bool)
func (_AcctManager *AcctManagerCaller) ValidateAccount(opts *bind.CallOpts, _account common.Address, _orgId string) (bool, error) {
	var out []interface{}
	err := _AcctManager.contract.Call(opts, &out, "validateAccount", _account, _orgId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidateAccount is a free data retrieval call binding the contract method 0x6b568d76.
//
// Solidity: function validateAccount(address _account, string _orgId) view returns(bool)
func (_AcctManager *AcctManagerSession) ValidateAccount(_account common.Address, _orgId string) (bool, error) {
	return _AcctManager.Contract.ValidateAccount(&_AcctManager.CallOpts, _account, _orgId)
}

// ValidateAccount is a free data retrieval call binding the contract method 0x6b568d76.
//
// Solidity: function validateAccount(address _account, string _orgId) view returns(bool)
func (_AcctManager *AcctManagerCallerSession) ValidateAccount(_account common.Address, _orgId string) (bool, error) {
	return _AcctManager.Contract.ValidateAccount(&_AcctManager.CallOpts, _account, _orgId)
}

// AddNewAdmin is a paid mutator transaction binding the contract method 0xc214e5e5.
//
// Solidity: function addNewAdmin(string _orgId, address _account) returns(bool voterUpdate)
func (_AcctManager *AcctManagerTransactor) AddNewAdmin(opts *bind.TransactOpts, _orgId string, _account common.Address) (*types.Transaction, error) {
	return _AcctManager.contract.Transact(opts, "addNewAdmin", _orgId, _account)
}

// AddNewAdmin is a paid mutator transaction binding the contract method 0xc214e5e5.
//
// Solidity: function addNewAdmin(string _orgId, address _account) returns(bool voterUpdate)
func (_AcctManager *AcctManagerSession) AddNewAdmin(_orgId string, _account common.Address) (*types.Transaction, error) {
	return _AcctManager.Contract.AddNewAdmin(&_AcctManager.TransactOpts, _orgId, _account)
}

// AddNewAdmin is a paid mutator transaction binding the contract method 0xc214e5e5.
//
// Solidity: function addNewAdmin(string _orgId, address _account) returns(bool voterUpdate)
func (_AcctManager *AcctManagerTransactorSession) AddNewAdmin(_orgId string, _account common.Address) (*types.Transaction, error) {
	return _AcctManager.Contract.AddNewAdmin(&_AcctManager.TransactOpts, _orgId, _account)
}

// AssignAccountRole is a paid mutator transaction binding the contract method 0x143a5604.
//
// Solidity: function assignAccountRole(address _account, string _orgId, string _roleId, bool _adminRole) returns()
func (_AcctManager *AcctManagerTransactor) AssignAccountRole(opts *bind.TransactOpts, _account common.Address, _orgId string, _roleId string, _adminRole bool) (*types.Transaction, error) {
	return _AcctManager.contract.Transact(opts, "assignAccountRole", _account, _orgId, _roleId, _adminRole)
}

// AssignAccountRole is a paid mutator transaction binding the contract method 0x143a5604.
//
// Solidity: function assignAccountRole(address _account, string _orgId, string _roleId, bool _adminRole) returns()
func (_AcctManager *AcctManagerSession) AssignAccountRole(_account common.Address, _orgId string, _roleId string, _adminRole bool) (*types.Transaction, error) {
	return _AcctManager.Contract.AssignAccountRole(&_AcctManager.TransactOpts, _account, _orgId, _roleId, _adminRole)
}

// AssignAccountRole is a paid mutator transaction binding the contract method 0x143a5604.
//
// Solidity: function assignAccountRole(address _account, string _orgId, string _roleId, bool _adminRole) returns()
func (_AcctManager *AcctManagerTransactorSession) AssignAccountRole(_account common.Address, _orgId string, _roleId string, _adminRole bool) (*types.Transaction, error) {
	return _AcctManager.Contract.AssignAccountRole(&_AcctManager.TransactOpts, _account, _orgId, _roleId, _adminRole)
}

// AssignAdminRole is a paid mutator transaction binding the contract method 0xe3483a9d.
//
// Solidity: function assignAdminRole(address _account, string _orgId, string _roleId, uint256 _status) returns()
func (_AcctManager *AcctManagerTransactor) AssignAdminRole(opts *bind.TransactOpts, _account common.Address, _orgId string, _roleId string, _status *big.Int) (*types.Transaction, error) {
	return _AcctManager.contract.Transact(opts, "assignAdminRole", _account, _orgId, _roleId, _status)
}

// AssignAdminRole is a paid mutator transaction binding the contract method 0xe3483a9d.
//
// Solidity: function assignAdminRole(address _account, string _orgId, string _roleId, uint256 _status) returns()
func (_AcctManager *AcctManagerSession) AssignAdminRole(_account common.Address, _orgId string, _roleId string, _status *big.Int) (*types.Transaction, error) {
	return _AcctManager.Contract.AssignAdminRole(&_AcctManager.TransactOpts, _account, _orgId, _roleId, _status)
}

// AssignAdminRole is a paid mutator transaction binding the contract method 0xe3483a9d.
//
// Solidity: function assignAdminRole(address _account, string _orgId, string _roleId, uint256 _status) returns()
func (_AcctManager *AcctManagerTransactorSession) AssignAdminRole(_account common.Address, _orgId string, _roleId string, _status *big.Int) (*types.Transaction, error) {
	return _AcctManager.Contract.AssignAdminRole(&_AcctManager.TransactOpts, _account, _orgId, _roleId, _status)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _permUpgradable) returns()
func (_AcctManager *AcctManagerTransactor) Initialize(opts *bind.TransactOpts, _permUpgradable common.Address) (*types.Transaction, error) {
	return _AcctManager.contract.Transact(opts, "initialize", _permUpgradable)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _permUpgradable) returns()
func (_AcctManager *AcctManagerSession) Initialize(_permUpgradable common.Address) (*types.Transaction, error) {
	return _AcctManager.Contract.Initialize(&_AcctManager.TransactOpts, _permUpgradable)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _permUpgradable) returns()
func (_AcctManager *AcctManagerTransactorSession) Initialize(_permUpgradable common.Address) (*types.Transaction, error) {
	return _AcctManager.Contract.Initialize(&_AcctManager.TransactOpts, _permUpgradable)
}

// RemoveExistingAdmin is a paid mutator transaction binding the contract method 0x1d09dc93.
//
// Solidity: function removeExistingAdmin(string _orgId) returns(bool voterUpdate, address account)
func (_AcctManager *AcctManagerTransactor) RemoveExistingAdmin(opts *bind.TransactOpts, _orgId string) (*types.Transaction, error) {
	return _AcctManager.contract.Transact(opts, "removeExistingAdmin", _orgId)
}

// RemoveExistingAdmin is a paid mutator transaction binding the contract method 0x1d09dc93.
//
// Solidity: function removeExistingAdmin(string _orgId) returns(bool voterUpdate, address account)
func (_AcctManager *AcctManagerSession) RemoveExistingAdmin(_orgId string) (*types.Transaction, error) {
	return _AcctManager.Contract.RemoveExistingAdmin(&_AcctManager.TransactOpts, _orgId)
}

// RemoveExistingAdmin is a paid mutator transaction binding the contract method 0x1d09dc93.
//
// Solidity: function removeExistingAdmin(string _orgId) returns(bool voterUpdate, address account)
func (_AcctManager *AcctManagerTransactorSession) RemoveExistingAdmin(_orgId string) (*types.Transaction, error) {
	return _AcctManager.Contract.RemoveExistingAdmin(&_AcctManager.TransactOpts, _orgId)
}

// SetDefaults is a paid mutator transaction binding the contract method 0xcef7f6af.
//
// Solidity: function setDefaults(string _nwAdminRole, string _oAdminRole) returns()
func (_AcctManager *AcctManagerTransactor) SetDefaults(opts *bind.TransactOpts, _nwAdminRole string, _oAdminRole string) (*types.Transaction, error) {
	return _AcctManager.contract.Transact(opts, "setDefaults", _nwAdminRole, _oAdminRole)
}

// SetDefaults is a paid mutator transaction binding the contract method 0xcef7f6af.
//
// Solidity: function setDefaults(string _nwAdminRole, string _oAdminRole) returns()
func (_AcctManager *AcctManagerSession) SetDefaults(_nwAdminRole string, _oAdminRole string) (*types.Transaction, error) {
	return _AcctManager.Contract.SetDefaults(&_AcctManager.TransactOpts, _nwAdminRole, _oAdminRole)
}

// SetDefaults is a paid mutator transaction binding the contract method 0xcef7f6af.
//
// Solidity: function setDefaults(string _nwAdminRole, string _oAdminRole) returns()
func (_AcctManager *AcctManagerTransactorSession) SetDefaults(_nwAdminRole string, _oAdminRole string) (*types.Transaction, error) {
	return _AcctManager.Contract.SetDefaults(&_AcctManager.TransactOpts, _nwAdminRole, _oAdminRole)
}

// UpdateAccountStatus is a paid mutator transaction binding the contract method 0x84b7a84a.
//
// Solidity: function updateAccountStatus(string _orgId, address _account, uint256 _action) returns()
func (_AcctManager *AcctManagerTransactor) UpdateAccountStatus(opts *bind.TransactOpts, _orgId string, _account common.Address, _action *big.Int) (*types.Transaction, error) {
	return _AcctManager.contract.Transact(opts, "updateAccountStatus", _orgId, _account, _action)
}

// UpdateAccountStatus is a paid mutator transaction binding the contract method 0x84b7a84a.
//
// Solidity: function updateAccountStatus(string _orgId, address _account, uint256 _action) returns()
func (_AcctManager *AcctManagerSession) UpdateAccountStatus(_orgId string, _account common.Address, _action *big.Int) (*types.Transaction, error) {
	return _AcctManager.Contract.UpdateAccountStatus(&_AcctManager.TransactOpts, _orgId, _account, _action)
}

// UpdateAccountStatus is a paid mutator transaction binding the contract method 0x84b7a84a.
//
// Solidity: function updateAccountStatus(string _orgId, address _account, uint256 _action) returns()
func (_AcctManager *AcctManagerTransactorSession) UpdateAccountStatus(_orgId string, _account common.Address, _action *big.Int) (*types.Transaction, error) {
	return _AcctManager.Contract.UpdateAccountStatus(&_AcctManager.TransactOpts, _orgId, _account, _action)
}

// AcctManagerAccountAccessModifiedIterator is returned from FilterAccountAccessModified and is used to iterate over the raw logs and unpacked data for AccountAccessModified events raised by the AcctManager contract.
type AcctManagerAccountAccessModifiedIterator struct {
	Event *AcctManagerAccountAccessModified // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AcctManagerAccountAccessModifiedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AcctManagerAccountAccessModified)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AcctManagerAccountAccessModified)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AcctManagerAccountAccessModifiedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AcctManagerAccountAccessModifiedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AcctManagerAccountAccessModified represents a AccountAccessModified event raised by the AcctManager contract.
type AcctManagerAccountAccessModified struct {
	Account  common.Address
	OrgId    string
	RoleId   string
	OrgAdmin bool
	Status   *big.Int
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterAccountAccessModified is a free log retrieval operation binding the contract event 0x68e62a03aeb0a125c2fc869eed72f2fca473680987bdd680c093a534e17cc776.
//
// Solidity: event AccountAccessModified(address _account, string _orgId, string _roleId, bool _orgAdmin, uint256 _status)
func (_AcctManager *AcctManagerFilterer) FilterAccountAccessModified(opts *bind.FilterOpts) (*AcctManagerAccountAccessModifiedIterator, error) {

	logs, sub, err := _AcctManager.contract.FilterLogs(opts, "AccountAccessModified")
	if err != nil {
		return nil, err
	}
	return &AcctManagerAccountAccessModifiedIterator{contract: _AcctManager.contract, event: "AccountAccessModified", logs: logs, sub: sub}, nil
}

var AccountAccessModifiedTopicHash = "0x68e62a03aeb0a125c2fc869eed72f2fca473680987bdd680c093a534e17cc776"

// WatchAccountAccessModified is a free log subscription operation binding the contract event 0x68e62a03aeb0a125c2fc869eed72f2fca473680987bdd680c093a534e17cc776.
//
// Solidity: event AccountAccessModified(address _account, string _orgId, string _roleId, bool _orgAdmin, uint256 _status)
func (_AcctManager *AcctManagerFilterer) WatchAccountAccessModified(opts *bind.WatchOpts, sink chan<- *AcctManagerAccountAccessModified) (event.Subscription, error) {

	logs, sub, err := _AcctManager.contract.WatchLogs(opts, "AccountAccessModified")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AcctManagerAccountAccessModified)
				if err := _AcctManager.contract.UnpackLog(event, "AccountAccessModified", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccountAccessModified is a log parse operation binding the contract event 0x68e62a03aeb0a125c2fc869eed72f2fca473680987bdd680c093a534e17cc776.
//
// Solidity: event AccountAccessModified(address _account, string _orgId, string _roleId, bool _orgAdmin, uint256 _status)
func (_AcctManager *AcctManagerFilterer) ParseAccountAccessModified(log types.Log) (*AcctManagerAccountAccessModified, error) {
	event := new(AcctManagerAccountAccessModified)
	if err := _AcctManager.contract.UnpackLog(event, "AccountAccessModified", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AcctManagerAccountAccessRevokedIterator is returned from FilterAccountAccessRevoked and is used to iterate over the raw logs and unpacked data for AccountAccessRevoked events raised by the AcctManager contract.
type AcctManagerAccountAccessRevokedIterator struct {
	Event *AcctManagerAccountAccessRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AcctManagerAccountAccessRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AcctManagerAccountAccessRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AcctManagerAccountAccessRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AcctManagerAccountAccessRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AcctManagerAccountAccessRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AcctManagerAccountAccessRevoked represents a AccountAccessRevoked event raised by the AcctManager contract.
type AcctManagerAccountAccessRevoked struct {
	Account  common.Address
	OrgId    string
	RoleId   string
	OrgAdmin bool
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterAccountAccessRevoked is a free log retrieval operation binding the contract event 0x6b5105396435a8a139aeed682dd573cd2a7e6279de77f8c11f95a30399212ad1.
//
// Solidity: event AccountAccessRevoked(address _account, string _orgId, string _roleId, bool _orgAdmin)
func (_AcctManager *AcctManagerFilterer) FilterAccountAccessRevoked(opts *bind.FilterOpts) (*AcctManagerAccountAccessRevokedIterator, error) {

	logs, sub, err := _AcctManager.contract.FilterLogs(opts, "AccountAccessRevoked")
	if err != nil {
		return nil, err
	}
	return &AcctManagerAccountAccessRevokedIterator{contract: _AcctManager.contract, event: "AccountAccessRevoked", logs: logs, sub: sub}, nil
}

var AccountAccessRevokedTopicHash = "0x6b5105396435a8a139aeed682dd573cd2a7e6279de77f8c11f95a30399212ad1"

// WatchAccountAccessRevoked is a free log subscription operation binding the contract event 0x6b5105396435a8a139aeed682dd573cd2a7e6279de77f8c11f95a30399212ad1.
//
// Solidity: event AccountAccessRevoked(address _account, string _orgId, string _roleId, bool _orgAdmin)
func (_AcctManager *AcctManagerFilterer) WatchAccountAccessRevoked(opts *bind.WatchOpts, sink chan<- *AcctManagerAccountAccessRevoked) (event.Subscription, error) {

	logs, sub, err := _AcctManager.contract.WatchLogs(opts, "AccountAccessRevoked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AcctManagerAccountAccessRevoked)
				if err := _AcctManager.contract.UnpackLog(event, "AccountAccessRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccountAccessRevoked is a log parse operation binding the contract event 0x6b5105396435a8a139aeed682dd573cd2a7e6279de77f8c11f95a30399212ad1.
//
// Solidity: event AccountAccessRevoked(address _account, string _orgId, string _roleId, bool _orgAdmin)
func (_AcctManager *AcctManagerFilterer) ParseAccountAccessRevoked(log types.Log) (*AcctManagerAccountAccessRevoked, error) {
	event := new(AcctManagerAccountAccessRevoked)
	if err := _AcctManager.contract.UnpackLog(event, "AccountAccessRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AcctManagerAccountStatusChangedIterator is returned from FilterAccountStatusChanged and is used to iterate over the raw logs and unpacked data for AccountStatusChanged events raised by the AcctManager contract.
type AcctManagerAccountStatusChangedIterator struct {
	Event *AcctManagerAccountStatusChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AcctManagerAccountStatusChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AcctManagerAccountStatusChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AcctManagerAccountStatusChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AcctManagerAccountStatusChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AcctManagerAccountStatusChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AcctManagerAccountStatusChanged represents a AccountStatusChanged event raised by the AcctManager contract.
type AcctManagerAccountStatusChanged struct {
	Account common.Address
	OrgId   string
	Status  *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterAccountStatusChanged is a free log retrieval operation binding the contract event 0x36b0ea38154dec5e98b6bf928b971a9db5e8cd4b6946350e9e43fb9848c70b25.
//
// Solidity: event AccountStatusChanged(address _account, string _orgId, uint256 _status)
func (_AcctManager *AcctManagerFilterer) FilterAccountStatusChanged(opts *bind.FilterOpts) (*AcctManagerAccountStatusChangedIterator, error) {

	logs, sub, err := _AcctManager.contract.FilterLogs(opts, "AccountStatusChanged")
	if err != nil {
		return nil, err
	}
	return &AcctManagerAccountStatusChangedIterator{contract: _AcctManager.contract, event: "AccountStatusChanged", logs: logs, sub: sub}, nil
}

var AccountStatusChangedTopicHash = "0x36b0ea38154dec5e98b6bf928b971a9db5e8cd4b6946350e9e43fb9848c70b25"

// WatchAccountStatusChanged is a free log subscription operation binding the contract event 0x36b0ea38154dec5e98b6bf928b971a9db5e8cd4b6946350e9e43fb9848c70b25.
//
// Solidity: event AccountStatusChanged(address _account, string _orgId, uint256 _status)
func (_AcctManager *AcctManagerFilterer) WatchAccountStatusChanged(opts *bind.WatchOpts, sink chan<- *AcctManagerAccountStatusChanged) (event.Subscription, error) {

	logs, sub, err := _AcctManager.contract.WatchLogs(opts, "AccountStatusChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AcctManagerAccountStatusChanged)
				if err := _AcctManager.contract.UnpackLog(event, "AccountStatusChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccountStatusChanged is a log parse operation binding the contract event 0x36b0ea38154dec5e98b6bf928b971a9db5e8cd4b6946350e9e43fb9848c70b25.
//
// Solidity: event AccountStatusChanged(address _account, string _orgId, uint256 _status)
func (_AcctManager *AcctManagerFilterer) ParseAccountStatusChanged(log types.Log) (*AcctManagerAccountStatusChanged, error) {
	event := new(AcctManagerAccountStatusChanged)
	if err := _AcctManager.contract.UnpackLog(event, "AccountStatusChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AcctManagerInitializedAccsIterator is returned from FilterInitializedAccs and is used to iterate over the raw logs and unpacked data for InitializedAccs events raised by the AcctManager contract.
type AcctManagerInitializedAccsIterator struct {
	Event *AcctManagerInitializedAccs // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AcctManagerInitializedAccsIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AcctManagerInitializedAccs)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AcctManagerInitializedAccs)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AcctManagerInitializedAccsIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AcctManagerInitializedAccsIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AcctManagerInitializedAccs represents a InitializedAccs event raised by the AcctManager contract.
type AcctManagerInitializedAccs struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitializedAccs is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_AcctManager *AcctManagerFilterer) FilterInitializedAccs(opts *bind.FilterOpts) (*AcctManagerInitializedAccsIterator, error) {

	logs, sub, err := _AcctManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &AcctManagerInitializedAccsIterator{contract: _AcctManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

var InitializedAccsTopicHash = "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"

// WatchInitializedAccs is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_AcctManager *AcctManagerFilterer) WatchInitializedAccs(opts *bind.WatchOpts, sink chan<- *AcctManagerInitializedAccs) (event.Subscription, error) {

	logs, sub, err := _AcctManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AcctManagerInitializedAccs)
				if err := _AcctManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitializedAccs is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_AcctManager *AcctManagerFilterer) ParseInitializedAccs(log types.Log) (*AcctManagerInitializedAccs, error) {
	event := new(AcctManagerInitializedAccs)
	if err := _AcctManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
